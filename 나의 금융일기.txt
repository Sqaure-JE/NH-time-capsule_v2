import React, { useState } from 'react';
import { ChevronLeft, Camera, Star, Heart, Zap, Shield, Leaf } from 'lucide-react';

// 새로운 5가지 캐릭터 기반 감정 시스템
const emotionCharacters = [
  { 
    id: 'joy', 
    emoji: '😊', 
    name: '기쁨이', 
    color: '#FFD700', 
    description: '행복하고 에너지 넘치는',
    icon: Star
  },
  { 
    id: 'sadness', 
    emoji: '😢', 
    name: '슬픔이', 
    color: '#4A90E2', 
    description: '차분하고 공감하는',
    icon: Heart
  },
  { 
    id: 'anger', 
    emoji: '😡', 
    name: '분노', 
    color: '#FF4444', 
    description: '열정적이고 정의로운',
    icon: Zap
  },
  { 
    id: 'fear', 
    emoji: '😰', 
    name: '불안이', 
    color: '#9B59B6', 
    description: '신중하고 계획적인',
    icon: Shield
  },
  { 
    id: 'disgust', 
    emoji: '🤢', 
    name: '까칠이', 
    color: '#2ECC71', 
    description: '완벽주의자',
    icon: Leaf
  }
];

// 개선된 목적 중심 카테고리
const purposeCategories = [
  { id: 'financial', emoji: '💰', name: '금융목표', description: '투자, 저축, 부채 해결' },
  { id: 'travel', emoji: '🏖️', name: '여행계획', description: '국내외 여행 자금 모으기' },
  { id: 'lifestyle', emoji: '🎯', name: '라이프스타일', description: '취미, 자기계발, 건강' },
  { id: 'relationship', emoji: '💕', name: '인간관계', description: '가족, 친구와의 특별한 순간' },
  { id: 'career', emoji: '📈', name: '커리어', description: '취업, 승진, 창업 관련' },
  { id: 'home', emoji: '🏠', name: '내집마련', description: '주택 구매, 전세 자금' }
];

export default function ImprovedFinancialDiaryScreen() {
  const [selectedEmotion, setSelectedEmotion] = useState('joy');
  const [selectedCategory, setSelectedCategory] = useState('financial');
  const [title, setTitle] = useState('');
  const [content, setContent] = useState('');
  const [amount, setAmount] = useState('');
  const [transactionType, setTransactionType] = useState('expense');
  const [hasImage, setHasImage] = useState(false);

  const selectedEmotionData = emotionCharacters.find(e => e.id === selectedEmotion);
  const selectedCategoryData = purposeCategories.find(c => c.id === selectedCategory);

  const handleSave = () => {
    // 포인트 적립 다이얼로그 표시
    alert('🎉 금융일기가 저장되었습니다!\n기쁨이 캐릭터가 50P를 적립해주었어요!');
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-purple-50 to-pink-50">
      {/* 헤더 */}
      <div className="bg-white shadow-sm">
        <div className="flex items-center justify-between p-4">
          <button className="p-2 rounded-full hover:bg-gray-100">
            <ChevronLeft className="w-6 h-6" />
          </button>
          <h1 className="text-lg font-bold text-gray-800">나의 금융일기</h1>
          <button className="p-2 rounded-full hover:bg-gray-100">
            <div className="w-6 h-6 flex items-center justify-center">⋮</div>
          </button>
        </div>
      </div>

      <div className="p-4 space-y-6">
        {/* 날짜 섹션 */}
        <div className="text-center py-4">
          <h2 className="text-2xl font-bold text-gray-800">2025년 7월 6일 일요일</h2>
          <p className="text-gray-500 mt-1">오후 2:30 작성 중</p>
        </div>

        {/* 오늘의 금융 활동 */}
        <div className="bg-white rounded-xl p-5 shadow-sm">
          <div className="flex items-center justify-between mb-4">
            <h3 className="text-lg font-bold text-gray-800">오늘의 금융 활동</h3>
            <button className="text-green-600 font-semibold text-sm">더보기</button>
          </div>
          <div className="space-y-3">
            <div className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
              <div className="flex items-center space-x-3">
                <div className="w-8 h-8 bg-red-100 rounded-full flex items-center justify-center">
                  <span className="text-red-600 text-sm">↑</span>
                </div>
                <div>
                  <p className="font-medium text-gray-800">스타벅스 강남점</p>
                  <p className="text-sm text-gray-500">NH 체크카드</p>
                </div>
              </div>
              <span className="font-bold text-red-600">-5,600원</span>
            </div>
            <div className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
              <div className="flex items-center space-x-3">
                <div className="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center">
                  <span className="text-blue-600 text-sm">↓</span>
                </div>
                <div>
                  <p className="font-medium text-gray-800">급여</p>
                  <p className="text-sm text-gray-500">NH 통장</p>
                </div>
              </div>
              <span className="font-bold text-blue-600">+2,450,000원</span>
            </div>
          </div>
        </div>

        {/* 감정 캐릭터 선택 */}
        <div className="bg-white rounded-xl p-5 shadow-sm">
          <h3 className="text-lg font-bold text-gray-800 mb-4">
            오늘의 기분을 캐릭터로 표현해주세요 ✨
          </h3>
          <div className="grid grid-cols-5 gap-3">
            {emotionCharacters.map((emotion) => {
              const IconComponent = emotion.icon;
              const isSelected = selectedEmotion === emotion.id;
              return (
                <button
                  key={emotion.id}
                  onClick={() => setSelectedEmotion(emotion.id)}
                  className={`p-3 rounded-xl border-2 transition-all duration-200 ${
                    isSelected 
                      ? 'border-current shadow-lg transform scale-105' 
                      : 'border-gray-200 hover:border-gray-300'
                  }`}
                  style={{ 
                    borderColor: isSelected ? emotion.color : undefined,
                    backgroundColor: isSelected ? `${emotion.color}15` : undefined
                  }}
                >
                  <div className="text-2xl mb-1">{emotion.emoji}</div>
                  <div className="text-xs font-medium text-gray-700">{emotion.name}</div>
                  {isSelected && (
                    <div className="mt-1">
                      <IconComponent size={12} style={{ color: emotion.color, margin: '0 auto' }} />
                    </div>
                  )}
                </button>
              );
            })}
          </div>
          {selectedEmotionData && (
            <div className="mt-4 p-3 rounded-lg" style={{ backgroundColor: `${selectedEmotionData.color}15` }}>
              <p className="text-sm text-gray-600">
                <span className="font-semibold">{selectedEmotionData.name}</span>는 
                <span className="text-gray-700"> {selectedEmotionData.description}</span> 성향이에요!
              </p>
            </div>
          )}
        </div>

        {/* 목적 카테고리 선택 */}
        <div className="bg-white rounded-xl p-5 shadow-sm">
          <h3 className="text-lg font-bold text-gray-800 mb-4">무엇을 위한 기록인가요? 🎯</h3>
          <div className="grid grid-cols-3 gap-3">
            {purposeCategories.map((category) => {
              const isSelected = selectedCategory === category.id;
              return (
                <button
                  key={category.id}
                  onClick={() => setSelectedCategory(category.id)}
                  className={`p-3 rounded-xl border-2 transition-all duration-200 text-center ${
                    isSelected 
                      ? 'border-green-500 bg-green-50 shadow-md' 
                      : 'border-gray-200 hover:border-gray-300'
                  }`}
                >
                  <div className="text-xl mb-1">{category.emoji}</div>
                  <div className="text-xs font-medium text-gray-700">{category.name}</div>
                  <div className="text-xs text-gray-500 mt-1">{category.description}</div>
                </button>
              );
            })}
          </div>
        </div>

        {/* 금액 입력 */}
        <div className="bg-white rounded-xl p-5 shadow-sm">
          <h3 className="text-lg font-bold text-gray-800 mb-4">금액 기록하기 💰</h3>
          <div className="space-y-4">
            <div className="flex space-x-2">
              <button 
                onClick={() => setTransactionType('income')}
                className={`flex-1 py-2 px-4 rounded-lg border-2 transition-colors ${
                  transactionType === 'income' 
                    ? 'border-blue-500 bg-blue-50 text-blue-700' 
                    : 'border-gray-200 text-gray-600'
                }`}
              >
                수입 +
              </button>
              <button 
                onClick={() => setTransactionType('expense')}
                className={`flex-1 py-2 px-4 rounded-lg border-2 transition-colors ${
                  transactionType === 'expense' 
                    ? 'border-red-500 bg-red-50 text-red-700' 
                    : 'border-gray-200 text-gray-600'
                }`}
              >
                지출 -
              </button>
              <button 
                onClick={() => setTransactionType('saving')}
                className={`flex-1 py-2 px-4 rounded-lg border-2 transition-colors ${
                  transactionType === 'saving' 
                    ? 'border-green-500 bg-green-50 text-green-700' 
                    : 'border-gray-200 text-gray-600'
                }`}
              >
                저축 =
              </button>
            </div>
            <input
              type="text"
              placeholder="금액을 입력하세요"
              value={amount}
              onChange={(e) => setAmount(e.target.value)}
              className="w-full p-3 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500"
            />
          </div>
        </div>

        {/* 일기 작성 */}
        <div className="bg-white rounded-xl p-5 shadow-sm">
          <div className="flex items-center space-x-2 mb-4">
            <span className="text-2xl">{selectedEmotionData?.emoji}</span>
            <span className="text-xl">{selectedCategoryData?.emoji}</span>
            <h3 className="text-lg font-bold text-gray-800">오늘의 이야기</h3>
          </div>
          
          <div className="space-y-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">제목</label>
              <input
                type="text"
                placeholder="오늘의 제목을 입력해주세요"
                value={title}
                onChange={(e) => setTitle(e.target.value)}
                className="w-full p-3 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500"
              />
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">내용</label>
              <textarea
                placeholder="오늘의 감정과 금융 활동에 대해 자유롭게 적어보세요..."
                value={content}
                onChange={(e) => setContent(e.target.value)}
                rows={5}
                className="w-full p-3 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500"
              />
            </div>
          </div>
        </div>

        {/* 사진 추가 */}
        <div className="bg-white rounded-xl p-5 shadow-sm">
          <h3 className="text-lg font-bold text-gray-800 mb-4">추억 사진 추가하기 📸</h3>
          <button 
            onClick={() => setHasImage(!hasImage)}
            className="w-full h-32 border-2 border-dashed border-gray-300 rounded-lg flex flex-col items-center justify-center hover:border-green-500 transition-colors"
          >
            {hasImage ? (
              <>
                <div className="w-full h-full bg-gray-100 rounded-lg flex items-center justify-center">
                  <span className="text-gray-500">📷 사진이 추가되었습니다</span>
                </div>
              </>
            ) : (
              <>
                <Camera className="w-8 h-8 text-green-500 mb-2" />
                <span className="text-gray-600 font-medium">사진/영상 추가하기</span>
                <span className="text-xs text-gray-500 mt-1">이미지 추가 시 +20P 지급</span>
              </>
            )}
          </button>
        </div>

        {/* 리워드 섹션 */}
        <div className="bg-gradient-to-r from-yellow-100 to-yellow-200 rounded-xl p-5">
          <div className="flex items-center space-x-3 mb-3">
            <span className="text-2xl">⭐</span>
            <div>
              <h3 className="font-bold text-gray-800">타임캡슐 작성 리워드</h3>
              <p className="text-sm text-gray-600">작성 시 NH멤버스 50포인트 적립</p>
            </div>
          </div>
          <div className="flex items-center justify-between mb-2">
            <span className="text-sm text-gray-700">연속 작성 중 - 5일째</span>
            <span className="text-sm font-bold text-yellow-700">7일 (+200P)</span>
          </div>
          <div className="w-full bg-yellow-200 rounded-full h-2 mb-2">
            <div className="bg-yellow-500 h-2 rounded-full" style={{width: '71%'}}></div>
          </div>
          <div className="flex justify-between text-xs text-gray-600">
            <span>0일</span>
            <span>5일</span>
            <span>7일</span>
          </div>
        </div>
      </div>

      {/* 하단 버튼 */}
      <div className="fixed bottom-0 left-0 right-0 bg-white border-t border-gray-200 p-4">
        <div className="flex space-x-3">
          <button className="flex-1 py-3 px-4 border-2 border-green-500 text-green-500 rounded-lg font-semibold">
            임시저장
          </button>
          <button 
            onClick={handleSave}
            className="flex-1 py-3 px-4 bg-green-500 text-white rounded-lg font-semibold"
          >
            작성완료
          </button>
        </div>
      </div>

      {/* 하단 여백 */}
      <div className="h-20"></div>
    </div>
  );
}